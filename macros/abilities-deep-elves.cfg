#textdomain wesnoth-War_of_Legends

#define ABILITY_DESCEND_INTO_DARKNESS
    [teleport]
        name=_ "descend into darkness"
        description=_ "Teleports to nearby allied Priestesses, Matriarchs, Patronesses or Seers."
        special_note=_" This unit is able to teleport to nearby allied Priestesses, Matriarchs, Patronesses, Harbingers or Seers."
        [tunnel]
            [filter]
            [/filter]
            [source]
                x,y=$teleport_unit.x,$teleport_unit.y
            [/source]
            [target]
                [filter]
                    type=Priestress of the Vault, Matriarch, Patroness, Seer, Harbinger
                    [filter_side]
                        [allied_with]
                            side=$teleport_unit.side
                        [/allied_with]
                    [/filter_side]
                [/filter]
            [/target]
        [/tunnel]
    [/teleport]
#enddef

#define WEAPON_SPECIAL_HUNTER_PRE
    [hunter]
        id=hunter_pre
        name="aspect of the hunter"
        description=_ "Once this unit kills another unit, it gains the 'hunter' weapon special, granting additional damage against the unit type of the killed unit."
        special_note=_ " This unit is a hunter. Whenever it kills another unit, it deals more damage against units of the type of the defeated unit."
    [/hunter]
#enddef

#define WEAPON_SPECIAL_HUNTER TYPE
    [damage]
        id=hunter
        name= _ "hunting "+{TYPE}
        description= _ "This unit deals more damage on offense against "+{TYPE}+"."
        add=+2
        active_on=offense
        apply_to=attacker
        [filter_opponent]
            type={TYPE}
        [/filter_opponent]
    [/damage]
    [heal_on_hit]
        id=hunter_hho

        value=2
        active_on=offense
        apply_to=attacker
        [filter_opponent]
            type={TYPE}
        [/filter_opponent]
    [/heal_on_hit]
#enddef

#define WEAPON_SPECIAL_HUNTER_ADVANCED TYPE
    [damage]
        id=hunter_adv
        name= _ "hunting "+{TYPE}
        description= _ "This unit deals more damage on offense against "+{TYPE}+"."
        add=+3
        active_on=offense
        apply_to=attacker
        [filter_opponent]
            type={TYPE}
        [/filter_opponent]
    [/damage]
    [heal_on_hit]
        id=hunter_hho

        value=3
        active_on=offense
        apply_to=attacker
        [filter_opponent]
            type={TYPE}
        [/filter_opponent]
    [/heal_on_hit]
#enddef

#define WEAPON_SPECIAL_HUNTER_MAX TYPE
    [damage]
        id=hunter_max
        name= _ "hunting "+{TYPE}
        description= _ "This unit deals more damage on offense against "+{TYPE}+"."
        add=+4
        active_on=offense
        apply_to=attacker
        [filter_opponent]
            type={TYPE}
        [/filter_opponent]
    [/damage]
    [heal_on_hit]
        id=hunter_hho

        value=4
        active_on=offense
        apply_to=attacker
        [filter_opponent]
            type={TYPE}
        [/filter_opponent]
    [/heal_on_hit]
#enddef

#define WEAPON_SPECIAL_WILL_OF_SHASSAGOTH
    [wos]
        id=will of shassagoth
        name= _ "will of shassagoth"
        description=_ "The attack gains +1 damage per killed unit."
        special_note=_" This unit is able to become stronger by killing enemy units."
    [/wos]
#enddef

#define WEAPON_SPECIAL_KNOCKBACK
    [attacks]
        id=MINOTAUR_knockback
        name= _ "knockback"
        description= _ "When a unit is hit with a knockback attack, it is immediately pushed back one hex away from the attacker. Units cannot be knocked back into an occupied hex or onto terrain they normally could not move to. Only works on offense."
        special_note=_" This unit is able to knockback enemy units."
        value=0
        active_on=
        apply_to=opponent
        [filter_defender]
            [not]
                type=Dwarvish Ulfserker, Dwarvish Berserker
            [/not]
        [/filter_defender]
    [/attacks]
#enddef

#define WEAPON_SPECIAL_LINE_DAMAGE
    [line_damage]
        id=line_damage
        name="line damage"
        description=_ "This unit deals half damage to the unit that is standing behind the attacked unit."
        special_note=_" This unit deals half damage to the unit that is standing behind the attacked unit."
    [/line_damage]
#enddef

#define ABILITY_LITHIC_IDOL
    [idol_of_stone]
        id= idol_of_stone
        name= _"lithic idol"
        description= _"This unit turns to stone at day. It then regenerates +10 hitpoints per turn."
        special_note=_" This unit turns to stone at day. It then regenerates +10 hitpoints per turn."
    [/idol_of_stone]
#enddef

#define ABILITY_STARDUST
    [stardust]
        id= stardust
        name= _"stardust"
        description= _"This ability reduces the chance to be hit."
        special_note=_" This unit has a reduced chance to be hit."
    [/stardust]
#enddef

#define WEAPON_SPECIAL_STARDUST
    [chance_to_hit]
        id=stardust
        #ifdef __WMLUNITS__
        name=_"stardust"
        #endif
        sub="(5 * (level + 1))"
        apply_to=opponent
    [/chance_to_hit]
#enddef

#define ABILITY_SPURT
    [spurt]
        id=spurt
        name="spurt"
        description=_ "This unit regains movement points after an attack. Only works at night."
        special_note=_" This unit is able to move again after a nightly attack."
    [/spurt]
#enddef

#define WEAPON_SPECIAL_TRAMPLE
    [attacks]
        id=trample
        name= _ "trample"
        description= _ "This unit ignores the retaliation of the enemy and overruns just it."
        value=0
        apply_to=opponent
        special_note=_" This unit is able to overrun an enemy. Whenever it attacks, it moves across the field of the defending unit."
    [/attacks]
#enddef

#define WEAPON_SPECIAL_TRAMPLE_EVENT
    [event]
        name=attack end
        first_time_only=no

        [filter_attack]
            special_id=trample
        [/filter_attack]

        [store_locations]
            [not]
                [filter]
                [/filter]
            [/not]

            [filter_adjacent_location]
                x,y=$x2,$y2
                adjacent=-$unit.facing
            [/filter_adjacent_location]

            variable=trample_target_hex
        [/store_locations]

        [if]
            [variable]
                name=trample_target_hex.length
                greater_than=0
            [/variable]

            [then]
                [teleport]
                    [filter]
                        x,y=$x1,$y1
                    [/filter]
                    animate=no

                    x,y=$trample_target_hex.x,$trample_target_hex.y
                    check_passability=yes
                    clear_shroud=yes
                [/teleport]
                [redraw]
                [/redraw]
            [/then]
        [/if]
        [if]
            [variable]
                name=second_unit.level
                equals=1
            [/variable]
            [then]
                [modify_unit]
                    [filter]
                        id=$unit.id
                    [/filter]
                    [effect]
                        apply_to=experience
                        increase=+1
                    [/effect]
                [/modify_unit]
            [/then]
            [elseif]
                [variable]
                    name=second_unit.level
                    equals=2
                [/variable]
                [then]
                    [modify_unit]
                        [filter]
                            id=$unit.id
                        [/filter]
                        [effect]
                            apply_to=experience
                            increase=+2
                        [/effect]
                    [/modify_unit]
                [/then]
            [/elseif]
            [elseif]
                [variable]
                    name=second_unit.level
                    equals=3
                [/variable]
                [then]
                    [modify_unit]
                        [filter]
                            id=$unit.id
                        [/filter]
                        [effect]
                            apply_to=experience
                            increase=+3
                        [/effect]
                    [/modify_unit]
                [/then]
            [/elseif]
            [elseif]
                [variable]
                    name=second_unit.level
                    equals=4
                [/variable]
                [then]
                    [modify_unit]
                        [filter]
                            id=$unit.id
                        [/filter]
                        [effect]
                            apply_to=experience
                            increase=+4
                        [/effect]
                    [/modify_unit]
                [/then]
            [/elseif]
            [elseif]
                [variable]
                    name=second_unit.level
                    equals=5
                [/variable]
                [then]
                    [modify_unit]
                        [filter]
                            id=$unit.id
                        [/filter]
                        [effect]
                            apply_to=experience
                            increase=+5
                        [/effect]
                    [/modify_unit]
                [/then]
            [/elseif]
            [elseif]
                [variable]
                    name=second_unit.level
                    equals=6
                [/variable]
                [then]
                    [modify_unit]
                        [filter]
                            id=$unit.id
                        [/filter]
                        [effect]
                            apply_to=experience
                            increase=+6
                        [/effect]
                    [/modify_unit]
                [/then]
            [/elseif]
        [/if]
        [if]
            [variable]
                name=second_unit.hitpoints
                less_than=1
            [/variable]
            [then]
                [if]
                    [variable]
                        name=second_unit.level
                        equals=1
                    [/variable]
                    [then]
                        [modify_unit]
                            [filter]
                                id=$unit.id
                            [/filter]
                            [effect]
                                apply_to=experience
                                increase=+8
                            [/effect]
                        [/modify_unit]
                    [/then]
                    [elseif]
                        [variable]
                            name=second_unit.level
                            equals=0
                        [/variable]
                        [then]
                            [modify_unit]
                                [filter]
                                    id=$unit.id
                                [/filter]
                                [effect]
                                    apply_to=experience
                                    increase=+4
                                [/effect]
                            [/modify_unit]
                        [/then]
                    [/elseif]
                    [elseif]
                        [variable]
                            name=second_unit.level
                            equals=2
                        [/variable]
                        [then]
                            [modify_unit]
                                [filter]
                                    id=$unit.id
                                [/filter]
                                [effect]
                                    apply_to=experience
                                    increase=+16
                                [/effect]
                            [/modify_unit]
                        [/then]
                    [/elseif]
                    [elseif]
                        [variable]
                            name=second_unit.level
                            equals=3
                        [/variable]
                        [then]
                            [modify_unit]
                                [filter]
                                    id=$unit.id
                                [/filter]
                                [effect]
                                    apply_to=experience
                                    increase=+24
                                [/effect]
                            [/modify_unit]
                        [/then]
                    [/elseif]
                    [elseif]
                        [variable]
                            name=second_unit.level
                            equals=4
                        [/variable]
                        [then]
                            [modify_unit]
                                [filter]
                                    id=$unit.id
                                [/filter]
                                [effect]
                                    apply_to=experience
                                    increase=+32
                                [/effect]
                            [/modify_unit]
                        [/then]
                    [/elseif]
                    [elseif]
                        [variable]
                            name=second_unit.level
                            equals=5
                        [/variable]
                        [then]
                            [modify_unit]
                                [filter]
                                    id=$unit.id
                                [/filter]
                                [effect]
                                    apply_to=experience
                                    increase=+40
                                [/effect]
                            [/modify_unit]
                        [/then]
                    [/elseif]
                    [elseif]
                        [variable]
                            name=second_unit.level
                            equals=6
                        [/variable]
                        [then]
                            [modify_unit]
                                [filter]
                                    id=$unit.id
                                [/filter]
                                [effect]
                                    apply_to=experience
                                    increase=+48
                                [/effect]
                            [/modify_unit]
                        [/then]
                    [/elseif]
                [/if]
            [/then]
        [/if]

        [store_unit]
            [filter]
                id=$unit.id
            [/filter]
            kill=yes
            variable=trampler
        [/store_unit]

        [unstore_unit]
            variable=trampler
            advance=yes
            find_vacant=no
            x,y=$trampler.x,$trampler.y
        [/unstore_unit]

        {CLEAR_VARIABLE trample_direction,trample_target_hex}
    [/event]
#enddef

#define ABILITY_NOCTURNAL_REGENERATION
    [regenerate]
        value=4
        id=nocturnal_regen_4
        name="nocturnal regenerates +4"
        description=_"The unit will heal itself 4 HP during night/other dark ToD (including tiles darkened by dark aura). If it is poisoned, it will remove the poison instead of healing."
        affect_self=yes
        poison=cured
        [filter_self]
            [filter_location]
                time_of_day=chaotic
            [/filter_location]
        [/filter_self]
    [/regenerate]
#enddef
